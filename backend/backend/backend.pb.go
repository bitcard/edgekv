// Code generated by protoc-gen-go. DO NOT EDIT.
// source: backend/backend.proto

package backend

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// DHT messages
type ID struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{0}
}

func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (m *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(m, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Node struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Addr                 string   `protobuf:"bytes,2,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{1}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type EmptyReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReq) Reset()         { *m = EmptyReq{} }
func (m *EmptyReq) String() string { return proto.CompactTextString(m) }
func (*EmptyReq) ProtoMessage()    {}
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{2}
}

func (m *EmptyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReq.Unmarshal(m, b)
}
func (m *EmptyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReq.Marshal(b, m, deterministic)
}
func (m *EmptyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReq.Merge(m, src)
}
func (m *EmptyReq) XXX_Size() int {
	return xxx_messageInfo_EmptyReq.Size(m)
}
func (m *EmptyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReq proto.InternalMessageInfo

type EmptyRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRes) Reset()         { *m = EmptyRes{} }
func (m *EmptyRes) String() string { return proto.CompactTextString(m) }
func (*EmptyRes) ProtoMessage()    {}
func (*EmptyRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{3}
}

func (m *EmptyRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRes.Unmarshal(m, b)
}
func (m *EmptyRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRes.Marshal(b, m, deterministic)
}
func (m *EmptyRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRes.Merge(m, src)
}
func (m *EmptyRes) XXX_Size() int {
	return xxx_messageInfo_EmptyRes.Size(m)
}
func (m *EmptyRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRes.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRes proto.InternalMessageInfo

// storage messages
type GetRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{4}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResponse struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{5}
}

func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (m *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(m, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *GetResponse) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

type PutRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{6}
}

func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *PutRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type PutResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{7}
}

func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (m *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(m, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (m *PutResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

type DeleteRequest struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{8}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type DeleteResponse struct {
	Status               int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b81549028379a959, []int{9}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*ID)(nil), "backend.ID")
	proto.RegisterType((*Node)(nil), "backend.Node")
	proto.RegisterType((*EmptyReq)(nil), "backend.EmptyReq")
	proto.RegisterType((*EmptyRes)(nil), "backend.EmptyRes")
	proto.RegisterType((*GetRequest)(nil), "backend.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "backend.GetResponse")
	proto.RegisterType((*PutRequest)(nil), "backend.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "backend.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "backend.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "backend.DeleteResponse")
}

func init() { proto.RegisterFile("backend/backend.proto", fileDescriptor_b81549028379a959) }

var fileDescriptor_b81549028379a959 = []byte{
	// 396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0xdf, 0xcb, 0xd2, 0x50,
	0x18, 0xfe, 0xdc, 0xf7, 0x4d, 0xeb, 0x55, 0x47, 0x9d, 0xcc, 0x64, 0x17, 0x61, 0x07, 0x02, 0x89,
	0x32, 0x30, 0x29, 0xe8, 0xd2, 0x96, 0x43, 0x04, 0x19, 0x0b, 0xbc, 0x9f, 0x3b, 0x6f, 0x32, 0x5c,
	0x9b, 0xee, 0x9c, 0x09, 0xf6, 0x57, 0xf5, 0x27, 0xc6, 0xce, 0xce, 0x7e, 0x25, 0x16, 0x5d, 0xed,
	0xfd, 0xf5, 0x3c, 0xcf, 0xd9, 0xfb, 0x9c, 0x03, 0xcf, 0x77, 0x9e, 0x7f, 0xc0, 0x88, 0xbd, 0x57,
	0xdf, 0xe9, 0x31, 0x89, 0x45, 0x4c, 0x3a, 0x2a, 0xa5, 0x03, 0xd0, 0x56, 0x16, 0x31, 0x40, 0x0b,
	0xd8, 0xa8, 0x35, 0x6e, 0x4d, 0x1e, 0xbb, 0x5a, 0xc0, 0xe8, 0x1b, 0x78, 0xd8, 0xc4, 0x0c, 0xff,
	0xac, 0x13, 0x02, 0x0f, 0x1e, 0x63, 0xc9, 0x48, 0x93, 0x15, 0x19, 0x53, 0x80, 0x47, 0x5f, 0x7f,
	0x1c, 0xc5, 0xc5, 0xc5, 0x53, 0x2d, 0xe6, 0xf4, 0x25, 0x80, 0x8d, 0xc2, 0xc5, 0x53, 0x8a, 0x5c,
	0x90, 0x27, 0x70, 0x7f, 0xc0, 0x8b, 0xa2, 0xca, 0x42, 0xfa, 0x09, 0xba, 0xb2, 0xcf, 0x8f, 0x71,
	0xc4, 0x91, 0x0c, 0x40, 0x3f, 0x7b, 0x61, 0x8a, 0x6a, 0x24, 0x4f, 0x32, 0x41, 0x1e, 0xfc, 0x44,
	0x29, 0xa8, 0xbb, 0x32, 0xa6, 0x73, 0x00, 0x27, 0xbd, 0x4d, 0x5c, 0x31, 0x69, 0x35, 0x26, 0xfa,
	0x1a, 0xba, 0x12, 0xa5, 0xe4, 0x86, 0xd0, 0xe6, 0xc2, 0x13, 0x29, 0x97, 0x48, 0xdd, 0x55, 0x19,
	0x7d, 0x05, 0x7d, 0x0b, 0x43, 0x14, 0x78, 0xfb, 0xe0, 0x13, 0x30, 0x8a, 0x91, 0xbf, 0x93, 0xcd,
	0x7e, 0xdd, 0x43, 0x67, 0x91, 0x2f, 0x9a, 0xcc, 0xa0, 0x67, 0xa3, 0xf8, 0x96, 0xfa, 0x3e, 0x72,
	0x1e, 0x27, 0xe4, 0xe9, 0xb4, 0x70, 0xa4, 0xd8, 0x9e, 0xd9, 0x2f, 0x4b, 0xd9, 0xf2, 0xe9, 0x1d,
	0x99, 0x83, 0x61, 0xa3, 0x70, 0x12, 0x64, 0xf8, 0x1f, 0xa8, 0x77, 0xd0, 0x5f, 0x06, 0x11, 0xab,
	0xa4, 0xba, 0xe5, 0xc4, 0xca, 0xba, 0x1e, 0xff, 0x08, 0xc3, 0x2f, 0x61, 0xcc, 0x91, 0x67, 0x42,
	0x3e, 0xb2, 0x20, 0xda, 0x2f, 0x83, 0x68, 0x8f, 0xff, 0xc2, 0xbd, 0x85, 0xf6, 0x26, 0x16, 0xc1,
	0xf7, 0x0b, 0x69, 0xb6, 0xcc, 0xab, 0x33, 0x72, 0xf9, 0x2b, 0xba, 0x8d, 0x62, 0xbd, 0x25, 0xcf,
	0xca, 0x6e, 0x75, 0x3b, 0xcc, 0x41, 0xb3, 0x98, 0xaf, 0x35, 0x47, 0x39, 0x69, 0x13, 0x55, 0x59,
	0x5f, 0x43, 0xd5, 0x9c, 0xa5, 0x77, 0xe4, 0x33, 0xe8, 0x16, 0x86, 0xeb, 0x2d, 0x19, 0x96, 0x03,
	0x0d, 0x4f, 0xcd, 0x17, 0x57, 0xf5, 0x02, 0xbb, 0x18, 0x83, 0x81, 0x6c, 0x8f, 0x87, 0xf3, 0x54,
	0x19, 0xb7, 0xe8, 0xa9, 0xc0, 0xc9, 0x1e, 0x8e, 0xd3, 0xda, 0xb5, 0xe5, 0x0b, 0xfa, 0xf0, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xd0, 0x7f, 0xf0, 0x62, 0x5a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BackendClient is the client API for Backend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackendClient interface {
	// DHT RPCs
	// Gets successor of this node
	GetSuccessor(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*Node, error)
	// Gets predecessor of this node
	GetPredecessor(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*Node, error)
	// find successor node to ID, may initiate other RPC calls
	FindSuccessor(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Node, error)
	// find the closest preeceding finger to id
	ClosestPrecedingFinger(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Node, error)
	// notify node of possible predecessor change
	Notify(ctx context.Context, in *Node, opts ...grpc.CallOption) (*EmptyRes, error)
	// storage RPCs
	// get value associated with key from remote edgekv group
	GetKV(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	// create or update value associated with key from remote edgekv group
	PutKV(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// delete key-value pair from remote edgekv group
	DelKV(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type backendClient struct {
	cc *grpc.ClientConn
}

func NewBackendClient(cc *grpc.ClientConn) BackendClient {
	return &backendClient{cc}
}

func (c *backendClient) GetSuccessor(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/backend.Backend/GetSuccessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) GetPredecessor(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/backend.Backend/GetPredecessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) FindSuccessor(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/backend.Backend/FindSuccessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) ClosestPrecedingFinger(ctx context.Context, in *ID, opts ...grpc.CallOption) (*Node, error) {
	out := new(Node)
	err := c.cc.Invoke(ctx, "/backend.Backend/ClosestPrecedingFinger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) Notify(ctx context.Context, in *Node, opts ...grpc.CallOption) (*EmptyRes, error) {
	out := new(EmptyRes)
	err := c.cc.Invoke(ctx, "/backend.Backend/Notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) GetKV(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/GetKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) PutKV(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/PutKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *backendClient) DelKV(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/backend.Backend/DelKV", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackendServer is the server API for Backend service.
type BackendServer interface {
	// DHT RPCs
	// Gets successor of this node
	GetSuccessor(context.Context, *EmptyReq) (*Node, error)
	// Gets predecessor of this node
	GetPredecessor(context.Context, *EmptyReq) (*Node, error)
	// find successor node to ID, may initiate other RPC calls
	FindSuccessor(context.Context, *ID) (*Node, error)
	// find the closest preeceding finger to id
	ClosestPrecedingFinger(context.Context, *ID) (*Node, error)
	// notify node of possible predecessor change
	Notify(context.Context, *Node) (*EmptyRes, error)
	// storage RPCs
	// get value associated with key from remote edgekv group
	GetKV(context.Context, *GetRequest) (*GetResponse, error)
	// create or update value associated with key from remote edgekv group
	PutKV(context.Context, *PutRequest) (*PutResponse, error)
	// delete key-value pair from remote edgekv group
	DelKV(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

// UnimplementedBackendServer can be embedded to have forward compatible implementations.
type UnimplementedBackendServer struct {
}

func (*UnimplementedBackendServer) GetSuccessor(ctx context.Context, req *EmptyReq) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSuccessor not implemented")
}
func (*UnimplementedBackendServer) GetPredecessor(ctx context.Context, req *EmptyReq) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPredecessor not implemented")
}
func (*UnimplementedBackendServer) FindSuccessor(ctx context.Context, req *ID) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindSuccessor not implemented")
}
func (*UnimplementedBackendServer) ClosestPrecedingFinger(ctx context.Context, req *ID) (*Node, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosestPrecedingFinger not implemented")
}
func (*UnimplementedBackendServer) Notify(ctx context.Context, req *Node) (*EmptyRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Notify not implemented")
}
func (*UnimplementedBackendServer) GetKV(ctx context.Context, req *GetRequest) (*GetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKV not implemented")
}
func (*UnimplementedBackendServer) PutKV(ctx context.Context, req *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutKV not implemented")
}
func (*UnimplementedBackendServer) DelKV(ctx context.Context, req *DeleteRequest) (*DeleteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelKV not implemented")
}

func RegisterBackendServer(s *grpc.Server, srv BackendServer) {
	s.RegisterService(&_Backend_serviceDesc, srv)
}

func _Backend_GetSuccessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).GetSuccessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/GetSuccessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).GetSuccessor(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_GetPredecessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).GetPredecessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/GetPredecessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).GetPredecessor(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_FindSuccessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).FindSuccessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/FindSuccessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).FindSuccessor(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_ClosestPrecedingFinger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).ClosestPrecedingFinger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/ClosestPrecedingFinger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).ClosestPrecedingFinger(ctx, req.(*ID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Node)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).Notify(ctx, req.(*Node))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_GetKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).GetKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/GetKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).GetKV(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_PutKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).PutKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/PutKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).PutKV(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Backend_DelKV_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackendServer).DelKV(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backend.Backend/DelKV",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackendServer).DelKV(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backend.Backend",
	HandlerType: (*BackendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSuccessor",
			Handler:    _Backend_GetSuccessor_Handler,
		},
		{
			MethodName: "GetPredecessor",
			Handler:    _Backend_GetPredecessor_Handler,
		},
		{
			MethodName: "FindSuccessor",
			Handler:    _Backend_FindSuccessor_Handler,
		},
		{
			MethodName: "ClosestPrecedingFinger",
			Handler:    _Backend_ClosestPrecedingFinger_Handler,
		},
		{
			MethodName: "Notify",
			Handler:    _Backend_Notify_Handler,
		},
		{
			MethodName: "GetKV",
			Handler:    _Backend_GetKV_Handler,
		},
		{
			MethodName: "PutKV",
			Handler:    _Backend_PutKV_Handler,
		},
		{
			MethodName: "DelKV",
			Handler:    _Backend_DelKV_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backend/backend.proto",
}
