syntax = "proto3";

option java_multiple_files = true;
option java_package = "edgekv.Backend";
option java_outer_classname = "BackendProto";

// Compile this file with:
// protoc -I backend/ backend/backend.proto --go_out=plugins=grpc:backend

package backend;

service Backend {
    // DHT RPCs
    // Gets successor of this node
    rpc GetSuccessor(EmptyReq) returns (Node) {}
    // Gets predecessor of this node
    rpc GetPredecessor(EmptyReq) returns (Node) {}
    // find successor node to ID, may initiate other RPC calls
    rpc FindSuccessor(ID) returns (Node) {}
    // find the closest preeceding finger to id
    rpc ClosestPrecedingFinger(ID) returns (Node) {}
    // notify node of possible predecessor change
    rpc Notify(Node) returns (EmptyRes) {}
    
    // storage RPCs
    // get value associated with key from remote edgekv group
    rpc GetKV(GetRequest) returns (GetResponse) {}
    // create or update value associated with key from remote edgekv group
    rpc PutKV(PutRequest) returns (PutResponse) {}
    // delete key-value pair from remote edgekv group
    rpc DelKV(DeleteRequest) returns (DeleteResponse) {}
}

// DHT messages
message ID {
    string id = 1;
}

message Node {
    string id = 1;
    string addr = 2;
}

message EmptyReq {}
message EmptyRes {}

// storage messages
message GetRequest {
    string key = 1;
}

message GetResponse {
    string value = 1;
    int32 size = 2;
}

message PutRequest {
    string key = 1;
    string value = 2;
}

message PutResponse {
    int32 status = 1;
}

message DeleteRequest {
    string key = 1;
}

message DeleteResponse {
    int32 status = 1;
}